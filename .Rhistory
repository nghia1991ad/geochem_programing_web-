blogdown::new_site()
blogdown:::new_post_addin()
blogdown::serve_site()
SySys.time()
Sys.time()
blogdown::serve_site()
servr::daemon_stop()
blogdown::serve_site()
servr::daemon_stop(2)
servr::daemon_stop(1)
servr::daemon_stop(0)
blogdown::new_post()
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown::serve_site()
servr::daemon_stop()
blogdown::serve_site()
blogdown:::new_post_addin()
help(plot)
?plot
apropos("plot") #Commands related to "plot"
example(plot)
help(plot)
?plot
apropos("plot") #Commands related to "plot"
example(plot)
x <- c(10.4, 5.6, 3.1, 6.4, 21.7)
y <- c(x,0,x)
y
x*2
x*c(1,2)
x*2
x*c(1,2)
print("Multiply is recycled, i.e. *1 *2 *1 *2 *1")
print("Intuitive operators of same length vectors")
x*2
print("Multiply is recycled, i.e. *1 *2 *1 *2 *1")
x*c(1,2)
x <- c(3,15,27)
names(x) <- c("Opx","Cpx","Pl")
x
blogdown::serve_site()
1:9
seq(30,22,-2)
x <- c(0,1)
rep(x,5)
1:9
seq(30,22,-2)
x <- c(0,1)
rep(x,5)
linspace(1,2,30)
1:9
seq(30,22,-2)
x <- c(0,1)
rep(x,5)
seq(0,5,length.out = 30) #linspace equivalent
which.min(x)
x[0]
x[,0]
x[3]
x
x[0,]
x
range(x)
sort(x)
y
x(t)
x(y)
sort(y)
y
prod(y)
prod(x)
paste("A","B","C",sep=";")
x <- c("A","B","C")
substring(x,1,4)
x <- c("Plagioclase","K-feldspar")
strsplit(x,"a")
blogdown::stop_server()
x <- matrix(1:12,3,4)
y <- matrix(1:12,3,4,byrow=TRUE)
x,y
x <- matrix(1:12,3,4)
y <- matrix(1:12,3,4,byrow=TRUE)
x
y
x <- matrix(1:12,3,4)
y <- matrix(1:12,3,4,byrow=TRUE)
z <- array(1:27, dim = 3,3,3)
x <- matrix(1:12,3,4)
y <- matrix(1:12,3,4,byrow=TRUE)
z <- array(1:27, dim = (3,3,3))
x <- matrix(1:12,3,4)
y <- matrix(1:12,3,4,byrow=TRUE)
z <- array(c(x,y), dim = (3,3,3))
x <- matrix(1:12,3,4)
y <- matrix(1:12,3,4,byrow=TRUE)
z <- array(c(x,y), dim = (4,3,3))
x <- matrix(1:12,3,4)
y <- matrix(1:12,3,4,byrow=TRUE)
z <- array(c(x,y), dim = (3,4,2))
x <- matrix(1:12,3,4)
y <- matrix(1:12,3,4,byrow=TRUE)
z <- array(c(x,y), dim = c(3,4,2))
z
x <- matrix(1:12,3,4)
y <- matrix(1:12,3,4,byrow=TRUE)
z <- array(c(x,y), dim = c(3,4,1))
z
x <- matrix(1:12,3,4)
y <- matrix(1:12,3,4,byrow=TRUE)
z <- array(c(x,y), dim = c(3,4,2))
z
x <- matrix(1:12,3,4)
x
y <- matrix(1:12,3,4,byrow=TRUE)
y
z <- array(c(x,y), dim = c(3,4,2))
z
x[,]
x[1,]
x[1,2]
x[,2]
blogdown:::insert_image_addin()
blogdown::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown::stop_server()
z
x
nrow(x)
cat(nrow(x))
cat("Abc",nrow(x))
cat("x =" x)
cat("x =",x)
cat("Number of row of x",nrow(x))
x
cat("Number of row of x",nrow(x))
x
cat("Number of rows",nrow(x))
cat("Number of columns", ncol(x))
cat(rownames(x), colnames(x))
x
print("Number of rows",nrow(x))
cat("Number of columns", ncol(x))
cat(rownames(x), colnames(x))
x
cat("Number of rows",nrow(x))
cat("Number of columns", ncol(x))
cat(rownames(x), colnames(x))
x
cat("Number of rows",nrow(x),"\n")
cat("Number of columns", ncol(x))
cat(rownames(x), colnames(x))
x
writeLines("Number of rows",nrow(x))
x
cat("Number of rows",nrow(x))
cat("Number of columns", ncol(x))
cat(rownames(x), colnames(x))
x
cat("Number of rows",nrow(x),"\n")
cat("Number of columns", ncol(x),"\n")
cat(rownames(x), colnames(x))
rownames(x)
x
cat("Number of rows",nrow(x),"\n")
cat("Number of columns", ncol(x),"\n")
cat(t(x))
x
t(x)
x
cat("Number of rows",nrow(x),"\n")
cat("Number of columns", ncol(x),"\n")
t(x)
dix(x)
diag(x)
diag(x)
solve(x)
x*y
x
y
x%*%y
y%*%x
x%*%t(x)
x
cat("Number of rows",nrow(x),"\n")
cat("Number of columns", ncol(x),"\n")
t(x)
x%*%t(x)
solve(x%*%t(x))
x
cat("Number of rows",nrow(x),"\n")
cat("Number of columns", ncol(x),"\n")
t(x)
x%*%t(x)
apply(x,1,sum)
x
x
cat("Number of rows",nrow(x),"\n")
cat("Number of columns", ncol(x),"\n")
t(x)
x%*%t(x)
apply(x,1,sum) #Sum of each row
apply(x,2,sum) #Sum of each column
blogdown::serve_site()
x <- c(1,12,15,NA,16,13,0,NA,NA)
names(x) <- c("Pl","Bt","Mu","Q","Kfs","Ky","Ol","Px","C")
x
x[x>10] #all elements > 10 or NA
x[!is.na(x)] #all available elements
x[1:5] #the first to five elements
x[c(1,5,6)] #1st, 5th and 7th elements
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
x[1,] # all columns of the first row
x <- matrix(1:12,3,4)
x[1,] # all columns of the first row
x[,c(1,3)] # all rows of the first and third columns
x[1:3,-2] # all columns aprt from the 2nd of rows 1-3
x <- matrix(1:12,3,4)
x
x[1,] # all columns of the first row
x[,c(1,3)] # all rows of the first and third columns
x[1:3,-2] # all columns aprt from the 2nd of rows 1-3
x[1,,drop=f]
x[1,,drop=F]
x <- matrix(1:20,4,5)
x
i <- matrix(c(1,2,3,3,2,1),3,2)
i
x <- matrix(1:20,4,5)
x
i <- matrix(c(1,2,3,3,2,1),3,2)
i
x[i]
x <- matrix(1:20,4,5)
x
i <- matrix(c(1,2,3,3,2,1),2,3)
i
x[i]
x <- matrix(1:20,4,5)
x
i <- matrix(c(1,2,3,3,2,1),2,3)
i
x <- matrix(1:20,4,5)
x
i <- matrix(c(1,2,3,3,2,1),2,3)
i
i[,1]
x <- matrix(1:20,4,5)
x
i <- matrix(c(1,2,3,3,2,1),2,3)
i
x[i[,1]]
x <- matrix(1:20,4,5)
x
i <- matrix(c(1,2,3,3,2,1),3,2)
i
x[i[,1]]
x <- matrix(1:20,4,5)
x
i <- matrix(c(1,2,3,3,2,1),3,2)
i
x[i] <- 0
x
x1 <- c("Luckovice","9 km E of Blatna","disused quarry")
x2 <- "melamonzonite"
x3 <- c(47.31, 1.05, 14.94, 7.01, 8.46, 10.33)
names(x3) <- c("SiO2", "TiO2", "Al2O3", "FeO", "MgO", "CaO")
luckovice <- list(ID="Gbl-4",Locality=x1,Rock=x2,major=x3)
luckovice
luckovice[[1]]
luckovice$Rock
luckovice[[2]][3]
luckovice$major[c("SiO2","Al2O3")]
luckovice[[2]]
luckovice[c(1,2,3)]
#Basic usage
x <- c("Pl","Bt","Pl","Pl","Kfs","Pl","Bt","Pl",NA)
factor(x)
#Basic usage
x <- c("Pl","Bt","Pl","Pl","Kfs","Pl","Bt","Pl",NA)
factor(x)
ordered(x,c("Pl","Kfs","Bt"))
numericVector <- runif(100, min = 1, max = 256 )
cut(numericVector, 3)
cut(numericVector, 3, labels = c("low","med","high"))
cut(numericVector, 3, labels = FALSE)
cut(numericVector,breaks = c(1,100,200,256))
numericVector
cut(numericVector, 3)
cut(numericVector, 3, labels = c("low","med","high"))
numericVector <- runif(10, min = 1, max = 256 )
cut(numericVector, 3, labels = c("low","med","high"))
cut(numericVector,breaks = c(1,100,200,256), labels = c("l","m","h"))
numericVector <- runif(10, min = 1, max = 256 )
numericVector
cut(numericVector, 3, labels = c("low","med","high"))
cut(numericVector,breaks = c(1,100,200,256), labels = c("l","m","h"))
numericVector <- runif(10, min = 1, max = 256 )
numericVector
cut(numericVector, 3)
cut(numericVector, 3, labels = c("low","med","high"))
cut(numericVector,breaks = c(1,100,200,256), labels = c("l","m","h"))
blogdown::serve_site()
ChickWeight
table(ChickWeight)
table(ChickWeight$Diet)
table(cut(numericVector, 3))
vt_cut <- cut(numericVector,breaks = c(1,100,200,256), labels = c("l","m","h"))
table(vt_cut)
statef <- c("tas", "sa",  "qld", "nsw", "nsw", "nt",  "wa",  "wa",  "qld", "vic", "nsw", "vic", "qld", "qld", "sa",  "tas",  "sa",  "nt",  "wa",  "vic", "qld", "nsw", "nsw", "wa",  "sa",  "act", "nsw", "vic", "vic", "act")
incomes <- c(60, 49, 40, 61, 64, 60, 59, 54, 62, 69, 70, 42, 56, 61, 61, 61, 58, 51, 48, 65, 49, 49, 41, 48, 52, 46, 59, 46, 58, 43)
(incmeans <- tapply(incomes, statef, mean))
statef <- c("tas", "sa",  "qld", "nsw", "nsw", "nt",  "wa",  "wa",  "qld", "vic", "nsw", "vic", "qld", "qld", "sa",  "tas",  "sa",  "nt",  "wa",  "vic", "qld", "nsw", "nsw", "wa",  "sa",  "act", "nsw", "vic", "vic", "act")
incomes <- c(60, 49, 40, 61, 64, 60, 59, 54, 62, 69, 70, 42, 56, 61, 61, 61, 58, 51, 48, 65, 49, 49, 41, 48, 52, 46, 59, 46, 58, 43)
(incmeans <- tapply(incomes, statef, sum))
data("ChickWeight")
aggregate(ChickWeight$weight,  by=list(chkID = ChickWeight$Chick), FUN=median)
data("ChickWeight")
aggregate(ChickWeight$weight,  by=list(chkID = ChickWeight$Diet), FUN=median)
data("ChickWeight")
aggregate(ChickWeight$weight,  by=list(chkID = ChickWeight$Diet))
data("ChickWeight")
aggregate(ChickWeight$weight,  by=list(chkID = ChickWeight$Diet),aggregate(ChickWeight$weight,  by=list(chkID = ChickWeight$Diet), FUN=median))
data("ChickWeight")
aggregate(ChickWeight$weight,  by=list(chkID = ChickWeight$Diet), FUN=median)
data("ChickWeight")
aggregate(ChickWeight$weight,  by=list(chkID = ChickWeight$Diet), FUN=mean)
data("islands")
islands
